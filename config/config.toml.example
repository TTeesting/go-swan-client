[lotus]
client_api_url = "http://[ip]:[port]/rpc/v0"   # Url of lotus client web api, generally the [port] is 1234
client_access_token = ""                       # Access token of lotus client web api, it should have admin access right

[main]
api_url = "https://go-swan-server.filswan.com" # Swan API address. For Swan production, it is `https://go-swan-server.filswan.com`. It can be ignored if `[sender].offline_swan=true`
api_key = "" # Swan API key. Acquire from [Swan Platform](https://console.filswan.com/#/dashboard) -> "My Profile"->"Developer Settings". It can be ignored if `[sender].offline_mode=true`.
access_token = ""                              # Swan API access token. Acquire from [Swan Platform](https://console.filswan.com/#/dashboard) -> "My Profile"->"Developer Settings". It can be ignored if `[sender].offline_mode=true`.

[ipfs_server]
download_url_prefix = "http://[ip]:[port]"     # IPFS server url prefix. Store CAR files for downloading by storage provider. The downloading url will be `[download_url_prefix]/ipfs/[dataCID]`
upload_url_prefix = "http://[ip]:[port]"       # IPFS server url for uploading files

[sender]
offline_swan = false                           # Whether to create a task on [Swan Platform](https://console.filswan.com/#/dashboard), when set to true, only generate metadata for Storage Providers to import deals. 
verified_deal = true                           # Whether deals in the task are going to be sent as verified or not
fast_retrieval = true                          # Whether deals in the task are available for fast-retrieval or not
skip_confirmation = false                      # Whether to skip manual confirmation of each deal before sending
generate_md5 = false                           # Whether to generate md5 for each car file and source file(resource consuming)
wallet = ""                                    # Wallet used for sending offline deals
max_price = "0"                                # Max price willing to pay per GiB/epoch for offline deals
start_epoch_hours = 96                         # Specify hours that the deal should after at (default 96 hours)
expire_days = 4                                # Specify days that the deal will expire after (default 4 days) 
duration = 1512000                             # How long the Storage Providers should store the data for, in blocks(30s/block), default 1512000.
start_deal_time_interval = 500                 # The interval between two deals sent, default: 500ms
